{"message":"Could not get Transactions: TypeError: Only absolute URLs are supported","level":"error"}
{"message":"Could not get Transactions: TypeError: Only absolute URLs are supported","level":"error"}
{"label":"TransactionEventService","level":"error","message":"Could not get Transactions: TypeError: Only absolute URLs are supported"}
{"label":"TransactionEventService","level":"error","message":"Could not get Transactions: TypeError: Only absolute URLs are supported"}
{"label":"TransactionEventService","level":"error","message":"Could not get Transactions: TypeError: Only absolute URLs are supported"}
{"label":"TransactionEventService","level":"error","message":"Could not get Transactions: TypeError: Only absolute URLs are supported"}
{"message":"getTransactions: Could not get Transaaaactions: TypeError: Only absolute URLs are supported","level":"error"}
{"message":"getTransactions: Could not get Transactions: TypeError: Only absolute URLs are supported","level":"error"}
{"message":"getTransactions: Could not get Transactions: TypeError: Only absolute URLs are supported","level":"error"}
{"message":"getTransactions: Could not get Transaaaaaaaactions: TypeError: Only absolute URLs are supported","level":"error"}
{"message":"getTransactions: Could not get Transactions: TypeError: Only absolute URLs are supported","level":"error"}
{"message":"Could not get Transactions: TypeError: Only absolute URLs are supported\n    at getNodeRequestOptions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1305:9)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1410:19\n    at new Promise (<anonymous>)\n    at Function.fetch [as default] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1407:9)\n    at TransactionEventApi.<anonymous> (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:19:56)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:4:12)\n    at TransactionEventApi.getTransactions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:18:71)","level":"error"}
{"message":"Could not get Transactions: TypeError: Only absolute URLs are supported\n    at getNodeRequestOptions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1305:9)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1410:19\n    at new Promise (<anonymous>)\n    at Function.fetch [as default] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1407:9)\n    at TransactionEventApi.<anonymous> (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:19:56)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:4:12)\n    at TransactionEventApi.getTransactions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:18:71)","level":"error"}
{"message":"Could not get Transactions: TypeError: Only absolute URLs are supported\n    at getNodeRequestOptions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1305:9)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1410:19\n    at new Promise (<anonymous>)\n    at Function.fetch [as default] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1407:9)\n    at TransactionEventApi.<anonymous> (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:19:56)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:4:12)\n    at TransactionEventApi.getTransactions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:18:71)","level":"error"}
{"message":"Could not get Transactions: TypeError: Only absolute URLs are supported\n    at getNodeRequestOptions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1305:9)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1410:19\n    at new Promise (<anonymous>)\n    at Function.fetch [as default] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1407:9)\n    at TransactionEventApi.<anonymous> (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:19:56)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:4:12)\n    at TransactionEventApi.getTransactions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:18:71)","level":"error"}
{"message":"Could not get Transactions: undefined","level":"error"}
{"message":"Could not get Transactions: TypeError: Only absolute URLs are supported\n    at getNodeRequestOptions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1305:9)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1410:19\n    at new Promise (<anonymous>)\n    at Function.fetch [as default] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1407:9)\n    at TransactionEventApi.<anonymous> (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:19:56)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:4:12)\n    at TransactionEventApi.getTransactions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:18:71)","level":"error"}
{"message":"Could not get Transactions: undefined","level":"error"}
{"message":"Could not get Transactions: Internal Server Error undefined","level":"error"}
{"message":"Could not get Transactions: TypeError: Only absolute URLs are supported TypeError: Only absolute URLs are supported\n    at getNodeRequestOptions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1305:9)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1410:19\n    at new Promise (<anonymous>)\n    at Function.fetch [as default] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1407:9)\n    at TransactionEventApi.<anonymous> (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:19:56)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:4:12)\n    at TransactionEventApi.getTransactions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:18:71)","level":"error"}
{"message":"Could not get Transactions: TypeError: Only absolute URLs are supported TypeError: Only absolute URLs are supported\n    at getNodeRequestOptions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1305:9)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1410:19\n    at new Promise (<anonymous>)\n    at Function.fetch [as default] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1407:9)\n    at TransactionEventApi.<anonymous> (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:19:56)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:4:12)\n    at TransactionEventApi.getTransactions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:18:71)","level":"error"}
{"message":"Could not get Transactions: TypeError: Only absolute URLs are supported TypeError: Only absolute URLs are supported\n    at getNodeRequestOptions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1305:9)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1410:19\n    at new Promise (<anonymous>)\n    at Function.fetch [as default] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\node-fetch\\lib\\index.js:1407:9)\n    at TransactionEventApi.<anonymous> (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:19:56)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:4:12)\n    at TransactionEventApi.getTransactions (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\http\\TransactionEventApi.js:18:71)","level":"error"}
{"message":"Error Retrieving TransactionsArgumentNullException: Argument must not be null: urlArgumentNullException: Argument must not be null: url\n    at new GetTransactionsRequest (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\models\\TransactionEventService\\GetTransactions\\GetTransactionsRequest.js:11:19)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\service\\RequestHistory\\RequestHistory.js:15:40\n    at Layer.handle [as handle_request] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\body-parser\\lib\\read.js:130:5","level":"error"}
{"message":"Error Retrieving TransactionsArgumentNullException: Argument must not be null: url\n    at new GetTransactionsRequest (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\models\\TransactionEventService\\GetTransactions\\GetTransactionsRequest.js:11:19)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\service\\RequestHistory\\RequestHistory.js:15:40\n    at Layer.handle [as handle_request] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\body-parser\\lib\\read.js:130:5","level":"error"}
{"message":"Error Retrieving Transactions: ArgumentNullException: Argument must not be null: url\n    at new GetTransactionsRequest (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\models\\TransactionEventService\\GetTransactions\\GetTransactionsRequest.js:11:19)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\service\\RequestHistory\\RequestHistory.js:15:40\n    at Layer.handle [as handle_request] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\body-parser\\lib\\read.js:130:5","level":"error"}
{"message":"Error Retrieving Transactions: ArgumentException: Cannot be null\n    at new GetTransactionsRequest (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\models\\TransactionEventService\\GetTransactions\\GetTransactionsRequest.js:15:19)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\service\\RequestHistory\\RequestHistory.js:15:40\n    at Layer.handle [as handle_request] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\node_modules\\body-parser\\lib\\read.js:130:5","level":"error"}
{"message":"Could not get Transactions: undefined","level":"error"}
{"message":"Could not get Transactions: Internal Server Error","level":"error"}
{"message":"Could not get Transactions: TypeError: Cannot read property 'push' of undefined","level":"error"}
{"message":"Could not get Transactions: TypeError: Cannot read property 'push' of undefined TypeError: Cannot read property 'push' of undefined\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\models\\TransactionEventService\\GetTransactions\\GetTransactionsResponse.js:20:24\n    at Array.forEach (<anonymous>)\n    at new GetTransactionsResponse (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\models\\TransactionEventService\\GetTransactions\\GetTransactionsResponse.js:19:15)\n    at TransactionEventService.<anonymous> (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\business\\services\\TransactionEventService\\TransactionEventService.js:26:32)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\business\\services\\TransactionEventService\\TransactionEventService.js:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)","level":"error"}
{"message":"Could not get Transactions: TypeError: Cannot read property 'push' of undefined TypeError: Cannot read property 'push' of undefined\n    at C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\models\\TransactionEventService\\GetTransactions\\GetTransactionsResponse.js:20:24\n    at Array.forEach (<anonymous>)\n    at new GetTransactionsResponse (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\common\\models\\TransactionEventService\\GetTransactions\\GetTransactionsResponse.js:19:15)\n    at TransactionEventService.<anonymous> (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\business\\services\\TransactionEventService\\TransactionEventService.js:26:32)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\Adam\\GitHub\\icap-management-ui\\server\\dist\\business\\services\\TransactionEventService\\TransactionEventService.js:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)","level":"error"}
